generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  beer        beer[]
}

model beer {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String     @db.VarChar(255)
  type              String     @db.VarChar(255)
  brewery           String     @db.VarChar(255)
  alcohol_content   Float
  description       String     @db.VarChar(255)
  interesting_facts String?    @db.VarChar(255)
  hero_image        String?    @db.VarChar(255)
  account_id        String     @db.Uuid
  created_at        DateTime   @default(now()) @db.Timestamp(6)
  updated_at        DateTime   @default(now()) @db.Timestamp(6)
  account           account    @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  location          location[]
}

model location {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  address    String   @db.VarChar(255)
  beer_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  beer       beer     @relation(fields: [beer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  account     account[]
}
